{
  "name": "14_blog-demo",
  "version": "1.0.0",
  "description": "1. 登录/注册\r     2. 文章列表\r     3. 发表文章\r     4. 文章评论\r ##(二)项目结构设计\r     1. node_modules:各种npm包\r     2. views: 视图文件（html,ejs)\r     3. public\r         3.1 images: 存放图片\r         3.2 javascript: 存放js文件\r         3.3 stylesheets: 存放css文件\r     4. routes: 路由文件\r     5. controllers: 控制器文件，业务逻辑代码\r     6. modules: 数据模型文件(数据库相关的文件)\r     7. config: 配置文件\r     8. app.js:项目的启动入口文件\r     9. package.json: 项目的配置文件\r (三)数据库设计 \r     1.名词解释\r         1.1 ER图(Entity Relationship): 用来描述数据库表结构之间的关系\r         1.2 主键(Primary key): 用来确保表中的记录的唯一性\r         1.3 外键(Foreign key): 用来维护父表和子表之间的关系，外键需要进行配置，外键的命名规范，fk父表名_子表名_外键名\r     2. 数据库表间关系\r         2.1 一对多: 最常见，比如一个用户可以发表多篇文章，数据库中通过在子表中放置一个外键来维护一对多关系\r         2.2 一对一: 用户与身份证信息，数据库中使用唯一外键和主键关联两种方式维护一对一关系\r         2.3 多对多: 老师与学生信息，数据库中通过再创建第三张表\r     3. 数据库设计\r         3.1 t_user: 用户表\r         3.2 t_blog: 文章表",
  "main": "app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@koa/router": "^10.0.0",
    "ejs": "^3.1.6",
    "koa": "^2.13.1",
    "koa-bodyparser": "^4.3.0",
    "koa-static": "^5.0.0",
    "koa-views": "^7.0.0",
    "mysql": "^2.18.1"
  }
}
